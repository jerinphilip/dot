;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(file-name-history shell-command-history org-read-date-history ido-buffer-history yes-or-no-p-history face-name-history ido-file-history minibuffer-history extended-command-history))
(setq file-name-history '("~/itws2/sandbox/src/" "~/itws2/sandbox/" "/home/jerin/itws2/course-admin/src/labs/advanced-emacs/index.org" "/home/jerin/.emacs" "/home/jerin/itws2/course-admin/src/labs/advanced-emacs/index.org"))
(setq shell-command-history '("cat"))
(setq ido-buffer-history '("src" "jerin" "*Messages*" "*Dired log*" "*scratch*" "jerin" "itws2" "sandbox" "src" "again.org" "src" "index.org" ".emacs" "TUTORIAL" "*eww*" "eval-ast.rkt" "*Messages*" "*scratch*" "*Backtrace*" "*terminal*" "*Completions*" "*Calendar*" "*Shell Command Output*" "reduce.py" "jerin" "itws2" "*Warnings*" "sandbox" "src" "*shell*" "new.org" "*Directory*" "itws2" "*Messages*" "*Ibuffer*" "*Directory*" "README.md" "*Messages*" ".vimrc" "README.md" "*Directory*" "index.org" "*Directory*" "*scratch*"))
(setq yes-or-no-p-history '("yes" "es" "yes" "no" "o"))
(setq face-name-history '("all faces"))
(setq ido-file-history '("src" "." nil "index.org" ".emacs" "index.org" "sample.org" "again.org" "eval-ast.rkt" "new.org" "src" "." "itws2/" "README.md" "." ".vimrc" "README.md" "index.org" "." "index.org" "sample.org" "index.org" ".emacs"))
(setq minibuffer-history '("/bin/bash" "0" "smex" "solarized-theme" "openwith"))
(setq extended-command-history '("text-mode" "delete-char" "term" "shell-command" "shell" "org-src-mode" "table-generate-source" "customize-face" "exit-minibuffer" "package-install"))
(setq org-drill-sm5-optimal-factor-matrix 'nil)
